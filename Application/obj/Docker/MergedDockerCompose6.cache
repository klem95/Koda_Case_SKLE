name: dockercompose12554665071935216541
services:
  application.server:
    build:
      context: C:\Users\45606\Documents\Work\Applications\Casework\Koda\Koda_Case_SKLE\Application
      dockerfile: Application.Server/Dockerfile
      args:
        BUILD_CONFIGURATION: Debug
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Application.Server
      target: base
    container_name: Application.Server
    depends_on:
      postgresdb:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: applicationserver:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net8.0/Application.Server.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    restart: unless-stopped
    tty: true
    volumes:
      - type: bind
        source: /c/Users/45606/AppData/Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/AppData/Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/Documents/Work/Applications/Casework/Koda/Koda_Case_SKLE/Application/Application.Server
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/Documents/Work/Applications/Casework/Koda/Koda_Case_SKLE/Application
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/vsdbg/vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/.nuget/packages/
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/AppData/Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/45606/AppData/Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Sdks/Microsoft.Docker.Sdk/tools/TokenService.Proxy/linux-x64/net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Program Files/Microsoft Visual Studio/2022/Preview/MSBuild/Sdks/Microsoft.Docker.Sdk/tools/HotReloadProxy/linux-x64/net8.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /c/Program Files/Microsoft Visual Studio/2022/Preview/Common7/IDE/CommonExtensions/Microsoft/HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  pgadmin:
    depends_on:
      postgresdb:
        condition: service_started
        required: true
    environment:
      PGADMIN_DEFAULT_EMAIL: kodaAdmin@outlook.dk
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_LISTEN_PORT: "8001"
    image: dpage/pgadmin4:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 8001
        published: "8001"
        protocol: tcp
  postgresdb:
    container_name: koda_db
    environment:
      POSTGRES_DB: KodaDb
      POSTGRES_PASSWORD: postgress
      POSTGRES_USER: postgress
    image: postgres
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5433"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: volume
        source: db
        target: /var/lib/postgres
        volume: {}
networks:
  default:
    name: dockercompose12554665071935216541_default
volumes:
  db:
    name: dockercompose12554665071935216541_db